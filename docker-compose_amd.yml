version: "3.8"

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
      - "5174:5174"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    tty: true
    env_file:
      - .env
    restart: always

  rest_api:
    container_name: rest_api
    build:
      context: ./rest_api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./rest_api:/app
    tty: true
    env_file:
      - .env
    restart: always

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb_local
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /data  # 永続化するデータのファイルパス
    volumes:
      - ./dynamodb_data:/data  # データの永続化
    ports:
      - 8082:8000
    env_file:
      - .env
    restart: always

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    container_name: dynamodb-admin
    tty: true
    environment:
      - DYNAMO_ENDPOINT=dynamodb-local:8000
    ports:
      - 8083:8001
    depends_on:
      - dynamodb-local
    env_file:
      - .env
    restart: always

  minio:
    image: minio/minio:latest
    container_name: minio
    entrypoint: bash
    command: -c "/opt/bin/minio server /export --address :9999 --console-address :9001"
    volumes:
        - ./minio_data:/export  # MinIOストレージの永続化
    ports:
        - '9000:9999'
        - '9001:9001'
    env_file:
      - .env
    restart: always

volumes:
  db-data: